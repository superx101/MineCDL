(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{312:function(t,a,s){"use strict";s.r(a);var e=s(14),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"llbds-code-generator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#llbds-code-generator"}},[t._v("#")]),t._v(" LLBDS Code Generator")]),t._v(" "),a("h2",{attrs:{id:"llbds"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#llbds"}},[t._v("#")]),t._v(" LLBDS")]),t._v(" "),a("p",[t._v("The full name is LiteLoaderBDS ( "),a("a",{attrs:{href:""}},[t._v("https://github.com/LiteLDev/LiteLoaderBDSv2")]),t._v(" ), a server-side plugin loader for Keystone Edition.")]),t._v(" "),a("p",[t._v("Plugins can be developed for this loader in many languages, currently MineCDL supports: "),a("code",[t._v("JS/TS")]),t._v(" language code generation.")]),t._v(" "),a("h2",{attrs:{id:"notes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[t._v("#")]),t._v(" Notes")]),t._v(" "),a("p",[t._v("LLBDS has corresponding command registration rules, please pay attention to observe them.")]),t._v(" "),a("h3",{attrs:{id:"_1-type-qualification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-type-qualification"}},[t._v("#")]),t._v(" 1. Type qualification")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("When defining a type, you don't need to write the prefix "),a("code",[t._v("ParamType.")]),t._v(" You can just write the type directly.")])]),t._v(" "),a("p",[t._v("LLBDS can only use the following variable types, no customization is allowed.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Command parameter type")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("meaning")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ParamType. Bool")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Boolean parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Int")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Integer parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Float")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Floating point parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. String")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("String parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Actor")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Entity target selector parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Player")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Player target selector parameters")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. BlockPos")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Integer coordinate parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Vec3")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Floating point coordinate parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. RawText")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Raw string parameter (can contain special characters such as commas and spaces, and can only be used as the last parameter)")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Message")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Message type parameter (the same as the/say instruction parameter, which will automatically expand the target selector, etc.)")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. JsonValue")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("JSON string parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Item")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Item type parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Block")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Block type parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Effect")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Effect type parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Enum")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Enumeration parameters")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. SoftEnum")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Variable enumeration parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. ActorType")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Entity type parameter")])]),t._v(" "),a("tr",[a("td",[t._v("ParamType. Command")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("Instruction name parameter (for testing only)")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-cannot-register-the-same-root-command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-cannot-register-the-same-root-command"}},[t._v("#")]),t._v(" 2. Cannot register the same root command")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("MineCDL doesn't check for this, but LLBDS will throw an error.\nPlease pay attention to this when defining the command tree.")])]),t._v(" "),a("p",[t._v("The root command cannot be duplicated in all commands, and cannot register the same root command as the original execution.")]),t._v(" "),a("p",[t._v("For example, the following commands are illegal")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("test | tp\n    f1()\n\ncmd | test\n    f1()\n")])])]),a("h3",{attrs:{id:"_3-don-t-duplicate-node-names"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-don-t-duplicate-node-names"}},[t._v("#")]),t._v(" 3. Don't duplicate node names.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("MineCDL doesn't check for this, but LLBDS throws an error, so please be aware of this when defining your command tree!")])]),t._v(" "),a("p",[t._v("If you define a player variable and a player enumeration as in the following example, LLBDS will consider them to be one and the same.")]),t._v(" "),a("p",[t._v("example:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("test\n    player\n        f1()\n    <player>: Player\n        f2()\n")])])]),a("h4",{attrs:{id:"solution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#solution"}},[t._v("#")]),t._v(" Solution")]),t._v(" "),a("p",[t._v("In the native plugin: TODO")]),t._v(" "),a("p",[t._v("In the scripting engine: rename the enumeration node with the tag "),a("code",[t._v('@(name="your_name")')]),t._v(". Note that the modified name cannot be the same as any existing node name either.")]),t._v(" "),a("h3",{attrs:{id:"_4-no-node-with-the-same-name-in-the-same-branch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-no-node-with-the-same-name-in-the-same-branch"}},[t._v("#")]),t._v(" 4. No node with the same name in the same branch.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),a("p",[t._v("MineCDL checks for this and throws an exception if it occurs.")])]),t._v(" "),a("p",[t._v("LLBDS distinguishes variables by their names, so the same variable name will be recognized as a variable.")]),t._v(" "),a("p",[t._v("Example")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cmd\n    <player>: Player\n        <player>: Player\n            f1()\n")])])]),a("h3",{attrs:{id:"_5-command-parsing-duality"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-command-parsing-duality"}},[t._v("#")]),t._v(" 5. Command Parsing Duality")]),t._v(" "),a("p",[t._v("LLBDS relies on the original command parsing of the bedrock version, so parsing is relatively fragile and prone to duality problems. For example, in the following example, "),a("code",[t._v("Actor")]),t._v(" is recognized as a string, which prevents you from ever branching to "),a("code",[t._v("f2")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("errorcmd\n    <target1>: Actor\n        <target2>: Actor\n            f1()\n    random | r            # this branch will never matched\n        f2()\n")])])]),a("h2",{attrs:{id:"native-plugin-labeling-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#native-plugin-labeling-rules"}},[t._v("#")]),t._v(" Native plugin labeling rules")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("h2",{attrs:{id:"script-engine-labeling-rules"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-engine-labeling-rules"}},[t._v("#")]),t._v(" Script Engine labeling rules")]),t._v(" "),a("h3",{attrs:{id:"root-node-tags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#root-node-tags"}},[t._v("#")]),t._v(" Root node tags")]),t._v(" "),a("p",[t._v("In the root node, you can use the tag")]),t._v(" "),a("p",[a("code",[t._v('@(description="introduction", permission=PermType.Any, flag=0x08)')])]),t._v(" "),a("p",[t._v("to specify command registration parameters, see\n"),a("a",{attrs:{href:"https://docs.litebds.com/zh-Hans/#/LLSEPluginDevelopment/GameAPI/Command",target:"_blank",rel:"noopener noreferrer"}},[t._v("mc.newCommand(cmd,description[,permission,flag,alias])"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("Can be unchecked or partially selected, if partially selected, the rest of the items will be defaulted.")]),t._v(" "),a("p",[t._v("Example")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('cmd        @(description="introduction", permission=PermType.Any, flag=0x08)     \n    f1()\n')])])]),a("h3",{attrs:{id:"enumeration-tags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#enumeration-tags"}},[t._v("#")]),t._v(" Enumeration tags")]),t._v(" "),a("p",[t._v("For enumerations, you can use")]),t._v(" "),a("p",[a("code",[t._v('@(name="name", enumOptions=1)')]),t._v(" to specify the name of the enumeration display, and whether to expand the enumeration.")]),t._v(" "),a("p",[t._v("For parameters, see:\n"),a("a",{attrs:{href:"https://docs.litebds.com/zh-Hans/#/LLSEPluginDevelopment/GameAPI/Command",target:"_blank",rel:"noopener noreferrer"}},[t._v("Command.mandatory(name,type[,enumName,identifier,enumOptions])"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"c"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[t._v("#")]),t._v(" C++")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("h2",{attrs:{id:"c-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#c-2"}},[t._v("#")]),t._v(" C#")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("h2",{attrs:{id:"script-js-ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#script-js-ts"}},[t._v("#")]),t._v(" Script (JS/TS)")]),t._v(" "),a("h3",{attrs:{id:"instructions-for-use"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#instructions-for-use"}},[t._v("#")]),t._v(" Instructions for use")]),t._v(" "),a("p",[t._v("Reference\n"),a("a",{attrs:{href:""}},[t._v("https://github.com/superx101/MineCDL/blob/main/example/generator_llbds/example.ts")])]),t._v(" "),a("p",[t._v("Use ScriptGenerator to access the command tree and generate code to the corresponding directory.")]),t._v(" "),a("div",{staticClass:"language-ts extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CommandTreeBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CommandTreeMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" McdlCommandTreeBuilder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LLBDS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"minecdl"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fs"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" mcdl "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFileSync")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/commands.mcdl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" builder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" CommandTreeBuilder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("McdlCommandTreeBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" trees "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" builder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mcdl"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CommandTreeMode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("STRICT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" generator "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LL")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ScriptGenerator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" __dirname "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/command"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    generator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dir "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ScriptLang"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("JavaScript"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LL")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ScriptModule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommonJS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// generator.generate(trees, dir + "/ts", LL.ScriptLang.TypeScript, LL.ScriptModule.ES);')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The program generates an abstract class that already contains the registration code and the code for the callback branch selection.\nAt this point, just create a new class that inherits TestCommandAbstract and write the processing code in the corresponding branch name.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestCommand")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestCommandAbstract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" origin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// determine origin ...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" origin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" output"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// if (res)")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//     output.success("...")')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// else")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//     output.error("...")')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// return res;")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("player"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" players"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" player"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" players"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("player"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" player"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pos"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("other_o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hollow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f4"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other_o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hollow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("other_o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other_o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" replace"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("other_o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"f5"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other_o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" block"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// main.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" testCmd "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestCommand")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntestCmd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"lua"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lua"}},[t._v("#")]),t._v(" Lua")]),t._v(" "),a("p",[t._v("TODO")]),t._v(" "),a("h2",{attrs:{id:"python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python"}},[t._v("#")]),t._v(" Python")]),t._v(" "),a("p",[t._v("TODO")])])}),[],!1,null,null,null);a.default=n.exports}}]);